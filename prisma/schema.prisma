// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Item{
  id Int @id @default (autoincrement())
  name String
  quantity Int
  description String
  characterId Int
  character Character @relation(fields: [characterId], references: [id])
}

model Weapon{
  id Int @id @default (autoincrement())
  name String
  attackBonus String
  damageDie String
  characterId Int
  character Character @relation(fields: [characterId], references: [id])
}

model Spell{
  id Int @id @default (autoincrement())
  name String
  effect String
  spellLevelId Int
  character SpellLevel @relation(fields: [spellLevelId], references: [id])
  casted Boolean
  
}

model SpellLevel{
  id Int @id @default (autoincrement())
  spellLevelName String?
  totalSpells Int?
  usedSpells Int?
  spells Spell[]
  character0 Character? @relation("spellLevel0")
  Character1 Character? @relation("spellLevel1")
  Character2 Character? @relation("spellLevel2")
  Character3 Character? @relation("spellLevel3")
  Character4 Character? @relation("spellLevel4")
  Character5 Character? @relation("spellLevel5")
  Character6 Character? @relation("spellLevel6")
  Character7 Character? @relation("spellLevel7")
  Character8 Character? @relation("spellLevel8")
  Character9 Character? @relation("spellLevel9")
}

model SavingThrows{
  id Int @id @default (autoincrement())
  strengthMod Int
  dexterityMod Int
  constitutionMod Int
  wisdomMod Int
  intelligenceMod Int
  charismaMod Int
  character Character?
}

model AbilityCheck{
  id Int @id @default (autoincrement())
  acrobatics Int
  animalHandling Int
  arcana Int
  athletics Int
  deception Int
  history Int
  insight Int
  intidimation Int
  investigation Int
  medicine Int
  nature Int
  perception Int
  perfomance Int
  persuasion Int
  religion Int
  sleightOfHand Int
  stealth Int
  survival Int
  character Character?
}

model Attributes{
  id Int @id @default (autoincrement())
  strengthValue Int
  strengthMod Int
  dexterityValue Int
  dexterityMod Int
  constitutionValue Int
  constitutionMod Int
  wisdomValue Int
  wisdomMod Int
  intelligenceValue Int
  intelligenceMod Int
  charismaValue Int
  charismaMod Int  
  character Character?
}

model Character{
  id Int @id @default (autoincrement())
  name String
  playerName String
  alignment String
  class String
  level Int
  XP Int
  background String
  race String
  attributeId Int @unique
  savingThrowId Int @unique
  abilityCheckId Int @unique
  attributes Attributes @relation(fields: [attributeId], references: [id])
  savingThrows SavingThrows @relation(fields: [savingThrowId], references: [id])
  abilityCheck AbilityCheck @relation(fields: [abilityCheckId], references: [id])
  proficiencyBonus Int
  inspiration Boolean? @default(false)
  armorClass Int
  initiative Int
  failCounter Int? @default(0)
  successCounter Int? @default(0)
  speed Int
  hitPointsMax Int
  hitPointsActual Int
  temporaryHitPoints Int?
  lifeDie String
  totalLifeDie String
  weapons Weapon[]
  inventory Item[]
  spellLevel0Id Int @unique
  spellLevel1Id Int @unique
  spellLevel2Id Int @unique
  spellLevel3Id Int @unique
  spellLevel4Id Int @unique
  spellLevel5Id Int @unique
  spellLevel6Id Int @unique
  spellLevel7Id Int @unique
  spellLevel8Id Int @unique
  spellLevel9Id Int @unique
  spellLevel0 SpellLevel @relation("spellLevel0", fields: [spellLevel0Id], references: [id])
  spellLevel1 SpellLevel @relation("spellLevel1", fields: [spellLevel1Id], references: [id])
  spellLevel2 SpellLevel @relation("spellLevel2", fields: [spellLevel2Id], references: [id])
  spellLevel3 SpellLevel @relation("spellLevel3", fields: [spellLevel3Id], references: [id])
  spellLevel4 SpellLevel @relation("spellLevel4", fields: [spellLevel4Id], references: [id])
  spellLevel5 SpellLevel @relation("spellLevel5", fields: [spellLevel5Id], references: [id])
  spellLevel6 SpellLevel @relation("spellLevel6", fields: [spellLevel6Id], references: [id])
  spellLevel7 SpellLevel @relation("spellLevel7", fields: [spellLevel7Id], references: [id])
  spellLevel8 SpellLevel @relation("spellLevel8", fields: [spellLevel8Id], references: [id])
  spellLevel9 SpellLevel @relation("spellLevel9", fields: [spellLevel9Id], references: [id])
  personalityTrait String?
  ideals String?
  bonds String?
  weakness String?
  talents String?
  proficiency String?
  history String?
  notes String?
  conjurerClass String?
  conjurerAttribute String?
  spellCD Int?
  spellAttackModifier Int?
  photo String?
  userId Int
  user User @relation(fields: [userId], references: [id])
}

model User{
  id Int @id @default (autoincrement())
  email String @unique
  password String
  username String
  characters Character[] 
}