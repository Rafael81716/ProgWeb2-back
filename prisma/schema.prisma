// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Item{
  id Int @id @default (autoincrement())
  name String
  quantity Int
  description String
  characterId Int
  character Character @relation(fields: [characterId], references: [id])
}

model Weapon{
  id Int @id @default (autoincrement())
  name String
  attackBonus String
  damageDie String
  characterId Int
  character Character @relation(fields: [characterId], references: [id])
}

model Spell{
  id Int @id @default (autoincrement())
  name String
  effect String
  characterId Int
  character Character @relation(fields: [characterId], references: [id])
}

model SavingThrows{
  id Int @id @default (autoincrement())
  strengthMod Int
  dexterityMod Int
  constituitionMod Int
  wisdomMod Int
  intelligenceMod Int
  charismaMod Int
  character Character?
}

model AbilityCheck{
  id Int @id @default (autoincrement())
  acrobatics Int
  animalHandling Int
  arcana Int
  athletics Int
  deception Int
  history Int
  insight Int
  intidimation Int
  investigation Int
  medicine Int
  nature Int
  perception Int
  perfomance Int
  persuasion Int
  religion Int
  sleightOfHand Int
  stealth Int
  survival Int
  character Character?
}

model Attributes{
  id Int @id @default (autoincrement())
  strengthValue Int
  strenghMod Int
  dexterityValue Int
  dexterityMod Int
  constitutionValue Int
  constitutionMod Int
  wisdomValue Int
  wisdomMod Int
  intelligenceValue Int
  intelligenceMod Int
  charismaValue Int
  charismaMod Int  
  character Character?
}

model Character{
  id Int @id @default (autoincrement())
  name String
  class String
  level Int
  background String
  race String
  attributeId Int @unique
  savingThrowId Int @unique
  abilityCheckId Int @unique
  attributes Attributes @relation(fields: [attributeId], references: [id])
  savingThrows SavingThrows @relation(fields: [savingThrowId], references: [id])
  abilityCheck AbilityCheck @relation(fields: [abilityCheckId], references: [id])
  armorClass Int
  initiative Int
  failCounter Int? @default(0)
  successCounter Int? @default(0)
  speed Int
  hitPoints Int
  weapons Weapon[]
  inventory Item[]
  spellCasting Spell[]
  history String?
  notes String?
  //Photo: IMG
  userId Int
  user User @relation(fields: [userId], references: [id])
}

model User{
  id Int @id @default (autoincrement())
  email String @unique
  password String
  username String
  characters Character[] 
}